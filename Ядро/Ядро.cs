/*
	ќснова дл€ MUD-клиента
*/


using System;
using System.Windows.Forms;


class ядро : Form
{
	public ∆урналируемыйЁлемент¬ывода Ёлемент¬ывода = new ∆урналируемыйЁлемент¬ывода();
	public Ёлемент¬вода Ёлемент¬вода = new Ёлемент¬вода();
	public —оединение —оединение = new —оединение();
	public Ќабор“аймеров “аймеры = new Ќабор“аймеров();

	Ёлемент¬ывода копи€Ёлемента¬ывода = null;
	bool дублироватьЁлемент¬ывода = true;

	public bool ƒублироватьЁлемент¬ывода
	{
		get
		{
			return дублироватьЁлемент¬ывода;
		}
		set
		{
			if (value == дублироватьЁлемент¬ывода)
				return;
			дублироватьЁлемент¬ывода = value;
			if (дублироватьЁлемент¬ывода && !Ёлемент¬ывода.«афиксированныйѕолзун)
				Ёлемент¬ывода.ѕрокрутить¬ онец();
			if (!дублироватьЁлемент¬ывода && копи€Ёлемента¬ывода != null)
				”далить опиюЁлемента¬ывода();
		}
	}

	void ”далить опиюЁлемента¬ывода()
	{
		if (копи€Ёлемента¬ывода == null)
			return;
		копи€Ёлемента¬ывода.Dispose();
		копи€Ёлемента¬ывода = null;
		—корректироватьѕоложениеЁлементов();
	}

	void —оздать опиюЁлемента¬ывода()
	{
		if (копи€Ёлемента¬ывода != null)
			return;
		if (Ёлемент¬ывода.„исло—трок == 0)
			return;
		копи€Ёлемента¬ывода = Ёлемент¬ывода. опировать();
		—корректироватьѕоложениеЁлементов();
	}

	public ядро()
	{
		Ёлемент¬ывода.Parent = this;
		Ёлемент¬вода.Ќажатие лавиши += new ќбработчик—обыти€Ќажатие лавиши(ќбработатьЌажатие лавиши);
		Ёлемент¬вода.¬вод += new ќбработчик—обыти€¬вод(ќбработать¬веденный“екст);
		Ёлемент¬вода.Parent = this;
		“аймеры.–одитель = this;
		—оединение.ѕолучениеƒанных += new ќбработчик—обыти€ѕолучениеƒанных(ќбработатьѕолученный“екст);
		—корректироватьѕоложениеЁлементов();
	}

	public virtual bool ќбработатьЌажатие лавиши( лавиша клавиша, bool ctrl, bool alt, bool shift)
	{
		if (ctrl || alt || shift)
			return false;
		if (клавиша ==  лавиша.PageUp)
		{
			if (ƒублироватьЁлемент¬ывода)
			{
				if (копи€Ёлемента¬ывода == null)
					—оздать опиюЁлемента¬ывода();
				else
					копи€Ёлемента¬ывода.ѕрокрутить(-10);
			}
			else
			{
				Ёлемент¬ывода.ѕрокрутить(-10);
			}
			return true;
		}
		if (клавиша ==  лавиша.PageDown)
		{
			if (ƒублироватьЁлемент¬ывода && копи€Ёлемента¬ывода != null)
			{
				if (копи€Ёлемента¬ывода.«афиксированныйѕолзун)
					”далить опиюЁлемента¬ывода();
				else
					копи€Ёлемента¬ывода.ѕрокрутить(+10);
			}
			else
			{
				Ёлемент¬ывода.ѕрокрутить(+10);
			}
			return true;
		}
		return false;
	}

	void —корректироватьѕоложениеЁлементов()
	{
		if (копи€Ёлемента¬ывода == null)
		{
			Ёлемент¬ывода.Dock = DockStyle.Fill;
			Ёлемент¬вода.Dock = DockStyle.Bottom;
		}
		else
		{
			Ёлемент¬ывода.Dock = DockStyle.None;
			Ёлемент¬вода.Dock = DockStyle.None;
			копи€Ёлемента¬ывода.Height = (ClientSize.Height - Ёлемент¬вода.Height) / 2;
			Ёлемент¬ывода.Height = ClientSize.Height - Ёлемент¬вода.Height - копи€Ёлемента¬ывода.Height - 1;
			Ёлемент¬ывода.Width = копи€Ёлемента¬ывода.Width = Ёлемент¬вода.Width = ClientSize.Width;
			Ёлемент¬ывода.Top = копи€Ёлемента¬ывода.Bottom + 1;
			Ёлемент¬вода.Top = Ёлемент¬ывода.Bottom;
		}
	}

	protected override void OnResize(EventArgs e)
	{
		—корректироватьѕоложениеЁлементов();
		base.OnResize(e);
	}

	public virtual void ќбработать¬веденный“екст(string текст)
	{
		lock (this)
		{
			Ёлемент¬ывода.ƒобавитьЁхо(текст);
			Ёлемент¬ывода.¬ывести();
			—оединение.ќтправить(текст);
		}
	}

	public virtual void ќбработатьѕолученный“екст(—трока[] строки)
	{
		foreach (—трока строка in строки)
			строка.”братьѕробелы¬ онце();
		Ёлемент¬ывода.¬ывести(строки);
	}

	protected override void OnActivated(EventArgs e)
	{
		Ёлемент¬вода.Select();
		base.OnActivated(e);
	}

	protected override void OnClosed(EventArgs e)
	{
		Ёлемент¬ывода.«акрыть∆урнал();
		Ёлемент¬ывода.—топ();
		“аймеры.ќстановить¬се“аймеры();
		—оединение.–азорвать();
		base.OnClosed(e);
	}
}
