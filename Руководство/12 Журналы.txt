Чтобы при каждом сеансе не включать запись журнала вручную, можно автоматизировать это с помощью триггеров. Для этого удобно использовать сообщение об успешном подключении.

public override string ОбработатьСтроку(Строка строка, bool статуснаяСтрока)
{
	string значение = строка.ToString();
	...
	if (значение.StartsWith("### ") && статуснаяСтрока)
	{
		ЭлементВывода.Добавить(строка);
		if (вБою)
		{
			ЭлементВывода.Добавить("----- Персонаж прекратил сражаться! -----");
			вБою = false;
		}
		if (значение == "### Соединение успешно установлено." || значение == "### Соединение с прокси-сервером успешно установлено.")
			return "#журнал";
		return null;
	}
	...
	return base.ОбработатьСтроку(строка, статуснаяСтрока);
}

Нельзя начать запись в новый журнал, если не закрыт текущий. Поэтому, если разорвать связь и снова подключиться к маду, то клиент не будет открывать новый журнал, а выдаст сообщение "### Журнал уже открыт." и продолжит запись в текущий. Для того чтобы при каждом подключении открывать новый журнал, поставьте триггер на разрыв соединения.

public override string ОбработатьСтроку(Строка строка, bool статуснаяСтрока)
{
	string значение = строка.ToString();
	...
	if (значение.StartsWith("### ") && статуснаяСтрока)
	{
		ЭлементВывода.Добавить(строка);
		if (вБою)
		{
			ЭлементВывода.Добавить("----- Персонаж прекратил сражаться! -----");
			вБою = false;
		}
		if (значение == "### Соединение успешно установлено." || значение == "### Соединение с прокси-сервером успешно установлено.")
			return "#журнал";
		if (значение == "### Соединение утеряно." || значение == "### Соединение разорвано пользователем.")
			return "#закрытьЖурнал";
		return null;
	}
	...
	return base.ОбработатьСтроку(строка, статуснаяСтрока);
}

При выходе из клиента журнал закрывается автоматически.

Есть более элегантный способ открытия журнала. При вступлении в игру определяется имя персонажа и открывается журнал с таким названием. У этого метода есть важное преимущество - пароль на чара не попадает в лог. Реализовать этот способ можно, например, так:

protected override string ОбработатьСтроку(Строка строка, bool статуснаяСтрока)
{
	Match match;
	string значение = строка.ToString();
	match = Regex.Match(значение, @"^Падежи : (\w+)/\w+/\w+/\w+/\w+/\w+$");
	if (match.Success && Переменные.Имя == "")
	{
		ЭлементВывода.Добавить(строка);
		Переменные.Имя = match.Result("$1");
		ЭлементВывода.ОткрытьЖурнал(Переменные.Имя, true);
		return null;
	}
	if (значение.StartsWith("* В связи с проблемами перевода"))
	{
		ЭлементВывода.Добавить(строка);
		return ";ктоя";
	}
	if (значение.StartsWith("Пересоединяемся") || значение.StartsWith("Ваша душа вновь вернулась в тело"))
	{
		ЭлементВывода.Добавить(строка);
		return "ктоя";
	}
	if (значение.StartsWith("### ") && статуснаяСтрока) // при разрыве связи
	{
		ЭлементВывода.Добавить(строка);
		if (вБою)
		{
			ЭлементВывода.Добавить("----- Персонаж прекратил сражаться! -----");
			вБою = false;
		}
		if (значение == "### Соединение утеряно." || значение == "### Соединение разорвано пользователем.")
		{
			Переменные.Имя = "";
			ЭлементВывода.ЗакрытьЖурнал();
			return null;
		}
		return null;
	}
	...
	return base.ОбработатьСтроку(строка, статуснаяСтрока);
}

В этом примере при вступлении в игру выполняется команда "ктоя" для определения имени персонажа. Переменная Имя используется, чтобы не было попыток открывать лог при каждом использовании команды "ктоя".

Изначально в логи помимо самого текста записываются цветовые коды и временные интервалы, чтобы потом этот лог можно было воспроизвести с помощью проигрывателя. Если Вы хотите, чтобы в лог записывался только текст, установите в false переменные ЗаписыватьПаузы и ЗаписыватьЦвета в файле Ядро\ЭлементВывода\ЖурналируемыйЭлементВывода.cs. Если Вы хотите очистить от служебной информации уже записанный лог, то воспользуйтесь программой Преобразователь, которая находится в паке Утилиты. С помощью этой программы можно также преобразовать лог в HTML-файл. Обратите внимание, что сформированная таким образом Web-страничка требует таблицу стилей mystyles.css, которую можно сформировать с помощью утилиты Стили. Утилита Преобразователь 2 делает то же самое, что и первая версия, но обладает удобным графическим интерфейсом.

